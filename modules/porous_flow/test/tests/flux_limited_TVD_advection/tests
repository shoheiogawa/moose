[Tests]
  [./except_01]
    type = 'RunException'
    input = 'except_01.i'
    expect_err = "The AdvectiveFluxCalculator UserObject fluo execute_on parameter must include, at least, 'linear'.  This is to ensure that this UserObject computes all necessary quantities just before the Kernels evaluate their Residuals"
    threading = '!pthreads'
  [../]
  [./jacobian_01]
    type = 'PetscJacobianTester'
    input = 'jacobian_01.i'
    ratio_tol = 1E-7
    difference_tol = 1E10
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./jacobian_02_minmod]
    type = 'PetscJacobianTester'
    input = 'jacobian_02.i'
    cli_args = 'UserObjects/fluo/flux_limiter_type=minmod'
    ratio_tol = 1E-7
    difference_tol = 1E10
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./jacobian_02_vanleer]
    type = 'PetscJacobianTester'
    input = 'jacobian_02.i'
    cli_args = 'UserObjects/fluo/flux_limiter_type=vanleer'
    ratio_tol = 1E-7
    difference_tol = 1E10
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./jacobian_02_mc]
    type = 'PetscJacobianTester'
    input = 'jacobian_02.i'
    cli_args = 'UserObjects/fluo/flux_limiter_type=mc'
    ratio_tol = 1E-7
    difference_tol = 1E10
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./jacobian_02_superbee]
    type = 'PetscJacobianTester'
    input = 'jacobian_02.i'
    cli_args = 'UserObjects/fluo/flux_limiter_type=superbee'
    ratio_tol = 1E-7
    difference_tol = 1E10
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./jacobian_02_vanleer_threads]
    type = 'PetscJacobianTester'
    input = 'jacobian_02.i'
    cli_args = 'UserObjects/fluo/flux_limiter_type=vanleer'
    ratio_tol = 1E-7
    difference_tol = 1E10
    min_threads = 2
    max_threads = 2
    prereq = jacobian_02_vanleer
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./jacobian_03_vanleer]
    type = 'PetscJacobianTester'
    input = 'jacobian_03.i'
    cli_args = 'UserObjects/fluo/flux_limiter_type=vanleer'
    ratio_tol = 1E-7
    difference_tol = 1E10
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./jacobian_03_mc]
    type = 'PetscJacobianTester'
    input = 'jacobian_03.i'
    cli_args = 'UserObjects/fluo/flux_limiter_type=mc'
    ratio_tol = 1E-7
    difference_tol = 1E10
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_1D]
    type = 'CSVDiff'
    input = 'fltvd_1D.i'
    csvdiff = 'fltvd_1D_out_tracer_0101.csv'
    abs_zero = 1.0E-5
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_1D_threads]
    type = 'CSVDiff'
    input = 'fltvd_1D.i'
    csvdiff = 'fltvd_1D_out_tracer_0101.csv'
    abs_zero = 1.0E-5
    min_threads = 2
    max_threads = 2
    prereq = fltvd_1D
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_2D]
    type = 'CSVDiff'
    input = 'fltvd_2D.i'
    csvdiff = 'fltvd_2D_out_tracer_0101.csv'
    abs_zero = 1.0E-5
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_2D_threads]
    type = 'CSVDiff'
    input = 'fltvd_2D.i'
    csvdiff = 'fltvd_2D_out_tracer_0101.csv'
    abs_zero = 1.0E-5
    min_threads = 2
    max_threads = 2
    prereq = 'fltvd_1D_threads fltvd_2D'
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_3D]
    type = 'CSVDiff'
    input = 'fltvd_3D.i'
    csvdiff = 'fltvd_3D_out_tracer_0101.csv'
    abs_zero = 1.0E-5
    threading = '!pthreads'
    heavy = true
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_2D_angle]
    type = Exodiff
    input = 'fltvd_2D_angle.i'
    exodiff = 'fltvd_2D_angle_out.e'
    threading = '!pthreads'
    abs_zero = 4.0E-4
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_2D_trimesh]
    type = 'CSVDiff'
    input = 'fltvd_2D_trimesh.i'
    csvdiff = 'fltvd_2D_trimesh_out_tracer_0101.csv'
    heavy = true
    abs_zero = 1.0E-5
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_2D_trimesh_threads]
    type = 'CSVDiff'
    input = 'fltvd_2D_trimesh.i'
    csvdiff = 'fltvd_2D_trimesh_out_tracer_0101.csv'
    heavy = true
    min_threads = 2
    max_threads = 2
    prereq = 'fltvd_2D_trimesh'
    abs_zero = 1.0E-5
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_2D_blocks]
    type = 'CSVDiff'
    input = 'fltvd_2D_blocks.i'
    csvdiff = 'fltvd_2D_blocks_out_tracer_bot_0101.csv fltvd_2D_blocks_out_tracer_top_0101.csv'
    abs_zero = 1.0E-5
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_2D_blocks_threads]
    type = 'CSVDiff'
    input = 'fltvd_2D_blocks.i'
    csvdiff = 'fltvd_2D_blocks_out_tracer_bot_0101.csv fltvd_2D_blocks_out_tracer_top_0101.csv'
    abs_zero = 1.0E-5
    min_threads = 2
    max_threads = 2
    prereq = 'fltvd_1D_threads fltvd_2D_blocks'
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_1D_adaptivity]
    type = 'CSVDiff'
    input = 'fltvd_1D_adaptivity.i'
    csvdiff = 'fltvd_1D_adaptivity_out_tracer_0101.csv'
    abs_zero = 1.0E-5
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
  [./fltvd_1D_adaptivity_threads]
    type = 'CSVDiff'
    input = 'fltvd_1D_adaptivity.i'
    csvdiff = 'fltvd_1D_adaptivity_out_tracer_0101.csv'
    abs_zero = 1.0E-5
    min_threads = 2
    max_threads = 2
    prereq = 'fltvd_1D_threads fltvd_1D_adaptivity'
    threading = '!pthreads'
    issues = '#12370 #12118 #10426'
    design = 'porous_flow/numerical_diffusion.md'
    requirement = 'PorousFlow shall implement Kuzmin-Turek stabilization'
  [../]
[]
